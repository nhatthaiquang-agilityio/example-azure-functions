name: $(Build.DefinitionName)_$(Date:yyyyMMdd)$(Rev:.r)
trigger: none
pr: none

pool:
  vmImage: 'windows-latest'

resources:
  repositories:
    - repository: CICD
      type: github
      ref: main
      name: nhatthaiquang-agilityio/Terraform-CI-CD
      endpoint: nhatthaiquang-agilityio

variables:
  - name: TerraformWorkingDirectory
    value: $(System.DefaultWorkingDirectory)/DevOps/terraform
  - name: AzureFunctionName
    value: 'example-azure-function'

stages:
  # - stage: build
  #   displayName: Build
  #   jobs:
  #     - template: jobs/build-dotnet.yml@CICD
  #       parameters:
  #         BuildTargetPath: '**/ExampleAzureFunctions.csproj'
  #         DotNetVersion: '8.x'

  - stage: SetupInfrastructure
    displayName: Setup Infrastructure with Terraform
    # dependsOn: build
    jobs:
      - template: jobs/setup-infrastructure.yml@CICD
        parameters:
          EnvironmentName: Test
          TerraformWorkingDirectory: '${{ variables.TerraformWorkingDirectory }}'
          AzureServiceConnectionName: 'ExampleAzureServiceConnection'
          AzureResourceGroupName: 'RG-ExamAzureFunctions'
          StorageAccountsName: 'testwithazfuncstorage'
          AzureContainerName: 'testazfunccontainer'
          AzureRmKeyTFState: 'test.azure-function-infrastructure.tfstate'
          Location: 'SouthEastAsia'
          FuncStorageAccountName: 'testwithazfuncstorage'
          AzureFunctionName: '${{ variables.AzureFunctionName }}'

  # - stage: deploy
  #   displayName: Deploy Test
  #   dependsOn: SetupInfrastructure
  #   variables:
  #     - group: Test.ExampleAzureFunctions
  #     - name: AzureFunctionName
  #       value: 'example-azure-function'
  #   jobs:
  #     - template: jobs/deploy-azure-function.yml@CICD
  #       parameters:
  #         EnvironmentName: Test
  #         AzureSubscription: '${{ variables.AzureServiceConnection }}'
  #         # actually, this is [environment]-[azure-function-name]
  #         AzureFunctionName: '${{ variables.AzureFunctionName }}'